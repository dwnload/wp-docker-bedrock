services:

  mariadb:
    image: mariadb:11.5
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - "mariadb:/var/lib/mysql"

  nginx:
    build:
      context: .
      dockerfile: ./Dockerfiles/nginx/Dockerfile
      args:
        PHP_VERSION: "${PHP_VERSION}"
    restart: always
    env_file: .env
    depends_on:
      php-fpm:
        condition: service_started
    ports:
      - "8080:80"
      - "9443:443"
    environment:
      NGINX_WEBROOT: "/var/www/html/web"
      SSL_MODE: "${SSL_MODE}"
      SSL_PRIVATE_KEY_FILE: "/etc/ssl/localhost.key"
      SSL_CERTIFICATE_FILE: "/etc/ssl/localhost.crt"
    volumes:
      - "./config/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./config/ssl:/etc/ssl"

  php-fpm:
    build:
      context: .
      dockerfile: ./Dockerfiles/php-fpm/Dockerfile
      target: dev
      args:
        PHP_VERSION: "${PHP_VERSION}"
        WITH_XDEBUG: ${WITH_XDEBUG}
    restart: always
    env_file: .env
    depends_on:
      mariadb:
        condition: service_started
      redis:
        condition: service_started
    environment:
      APP_BASE_DIR: "/var/www/html/web"
    volumes:
      - "web:/var/www/html"
    #extra_hosts:
    #  - "${HTTP_HOST}:172.17.0.1"

  redis:
    image: redis:7.4-alpine
    restart: always
    expose:
      - "6379"
    volumes:
      - "redis:/data"
    # launch Redis in cache mode with:
    #  - max memory up to 50% of your RAM if needed (--maxmemory 512mb)
    #  - deleting the oldest data when max memory is reached (--maxmemory-policy allkeys-lru)
    command:
      - redis-server
      - --save 60 1
      - --loglevel warning
      - --maxmemory 128mb
      - --maxmemory-policy allkeys-lru

volumes:
  mariadb:
  redis:
  web:
